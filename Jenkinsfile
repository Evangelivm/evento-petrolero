pipeline {
    agent any
    environment {
        CLOUDINARY_CLOUD_NAME = credentials('cloudinary-cloud-name')
        CLOUDINARY_API_KEY = credentials('cloudinary-api-key')
        CLOUDINARY_API_SECRET = credentials('cloudinary-api-secret')
        CLOUDINARY_URL = credentials('cloudinary-url')
        NEXT_PUBLIC_API_URL = credentials('next-public-api-url')
    }
    stages {
        stage('Preparar entorno') {
            steps {
                echo 'üîπ STAGE 1: Deteniendo contenedores anteriores y limpiando'
                sh '''
                cd /var/jenkins_home/workspace/front/evento-petrolero
                docker compose down || echo "No hab√≠a contenedores corriendo"
                '''
            }
        }
        
        stage('Obtener c√≥digo') {
            steps {
                echo 'üîπ STAGE 2: Obteniendo √∫ltima versi√≥n del c√≥digo'
                sh '''
                cd /var/jenkins_home/workspace/front/evento-petrolero
                git pull origin master
                echo "‚úÖ C√≥digo actualizado"
                '''
            }
        }
        
        stage('Construir imagen') {
            steps {
                echo 'üîπ STAGE 3: Construyendo imagen Docker con variables de entorno'
                sh '''
                cd /var/jenkins_home/workspace/front/evento-petrolero
                docker compose build --no-cache \
                    --build-arg CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME} \
                    --build-arg CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY} \
                    --build-arg CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET} \
                    --build-arg CLOUDINARY_URL=${CLOUDINARY_URL} \
                    --build-arg NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
                echo "‚úÖ Imagen construida exitosamente"
                '''
            }
        }
        
        stage('Desplegar') {
            steps {
                echo 'üîπ STAGE 4: Iniciando contenedores'
                sh '''
                cd /var/jenkins_home/workspace/front/evento-petrolero
                docker compose up -d
                echo "üöÄ Aplicaci√≥n desplegada en http://<tu-servidor>:3001"
                '''
            }
        }
        
        stage('Verificaci√≥n') {
            steps {
                echo 'üîπ STAGE 5: Comprobando estado del contenedor'
                sh '''
                cd /var/jenkins_home/workspace/front/evento-petrolero
                docker ps --filter "name=app" --format "{{.Status}}"
                '''
                echo "‚úîÔ∏è Pipeline completado"
            }
        }
    }
    
    post {
        failure {
            echo '‚ùå Pipeline fallido - Revisar logs'
            slackSend channel: '#alertas', message: "Fall√≥ el deploy de evento-petrolero: ${BUILD_URL}"
        }
        success {
            echo 'üéâ ¬°Despliegue exitoso!'
        }
    }
}